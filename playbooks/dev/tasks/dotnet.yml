- name: Include .NET vars
  ansible.builtin.include_vars:
    file: dotnet.yml

- name: Ensure .NET environment directories are created
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop: "{{ dotnet_directories }}"

- name: Check if dotnet command-line tool is installed
  ansible.builtin.shell: command -v cargo
  register: dotnet_exists
  ignore_errors: yes

- name: Download dotnet-install.sh script
  when: dotnet_exists is failed
  ansible.builtin.get_url:
    url: https://dot.net/v1/dotnet-install.sh
    dest: /tmp/dotnet-install.sh
    mode: '0755'
    force: 'yes'

- name: Install .NET frameworks
  when: dotnet_exists is failed
  ansible.builtin.shell: "/tmp/dotnet-install.sh -c {{ item }}"
  loop: "{{ dotnet_frameworks }}"
  tags:
    - dotnet

- name: Make sure dotnet tools set in PATH
  when: dotnet_exists is failed
  ansible.builtin.lineinfile:
    path: ~/.profile
    line: 'export PATH="$PATH:$HOME/.dotnet"'
    state: present

- name: Get Omnisharp
  ansible.builtin.get_url:
    url: "https://github.com/OmniSharp/omnisharp-roslyn/releases/download/v{{ omnisharp.version }}/omnisharp-linux-x64-net6.0.tar.gz"
    dest: /tmp/omnisharp-linux-x64-net6.0.tar.gz

- name: Unpack Omnisharp Language Server
  ansible.builtin.unarchive:
    src: /tmp/omnisharp-linux-x64-net6.0.tar.gz
    dest: "{{ omnisharp_dir }}"
    remote_src: yes

- name: Set up Omnisharp Language Server locations as environment variables
  ansible.builtin.lineinfile:
    path: ~/.profile
    line: "export OMNISHARP_HOME={{ omnisharp_dir }}"
    state: present
